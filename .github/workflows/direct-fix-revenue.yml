name: Direct Revenue Data Fix

on:
  # Allow manual triggering
  workflow_dispatch:

# Permissions needed for GitHub Pages deployment
permissions:
  contents: write

jobs:
  fix-revenue-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub Pages branch 🛎️
        uses: actions/checkout@v3
        with:
          ref: gh-pages
      
      - name: Check GitHub repository contents
        run: |
          echo "Examining actual files in the gh-pages branch..."
          
          # List the root directory
          echo "Root directory contents:"
          ls -la
          
          # Check if 1stop directory exists
          if [ -d "1stop" ]; then
            echo "✅ 1stop directory exists"
            # List contents of 1stop
            echo "1stop directory contents:"
            ls -la 1stop
            
            # Check if dashboard directory exists
            if [ -d "1stop/dashboard" ]; then
              echo "✅ dashboard directory exists"
              # List contents of dashboard
              echo "dashboard directory contents:"
              ls -la 1stop/dashboard
            else
              echo "❌ dashboard directory NOT FOUND"
              # Create it
              mkdir -p 1stop/dashboard
              echo "Created dashboard directory"
            fi
          else
            echo "❌ 1stop directory NOT FOUND"
            # Create the directories
            mkdir -p 1stop/dashboard
            echo "Created 1stop/dashboard directories"
          fi
      
      - name: Create revenue data files
        run: |
          echo "Creating revenue data files..."
          
          # Create the essential revenue_data.json file
          cat > 1stop/dashboard/revenue_data.json << EOF
          {
            "total_revenue": 310395.84,
            "cities": {
              "LYGRRATQ7EGG2": { "name": "London", "revenue": 158429.89, "percentage": 51.0 },
              "LXMC6DWVJ5N7W": { "name": "Hamilton", "revenue": 55925.11, "percentage": 18.0 },
              "LDK6Z980JTKXY": { "name": "Kitchener-Waterloo", "revenue": 45629.86, "percentage": 14.7 },
              "L4NE8GPX89J3A": { "name": "Ottawa", "revenue": 44269.42, "percentage": 14.3 },
              "LG0VGFKQ25XED": { "name": "Calgary", "revenue": 5610.99, "percentage": 1.8 }
            },
            "emergency_fix": true,
            "timestamp": "$(date)"
          }
          EOF
          
          # Create a data subdirectory for alternative paths
          mkdir -p 1stop/dashboard/data
          
          # Create a copy in the data subdirectory
          cp 1stop/dashboard/revenue_data.json 1stop/dashboard/data/revenue_data.json
          
          # Create a diagnostic verification page
          cat > 1stop/dashboard/revenue-verify.html << EOF
          <!DOCTYPE html>
          <html>
          <head>
              <title>Revenue Verification</title>
              <style>
                  body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
                  .success { color: green; font-weight: bold; }
                  .error { color: red; font-weight: bold; }
                  pre { background: #f5f5f5; padding: 10px; border-radius: 5px; overflow-x: auto; }
              </style>
          </head>
          <body>
              <h1>Revenue Data Verification</h1>
              <p>This page displays the revenue data directly from the JSON file.</p>
              
              <h2>Static Display (Hard-coded)</h2>
              <p>Total Revenue: <span style="font-weight: bold; font-size: 1.2em;">$310,395.84</span></p>
              
              <h2>Dynamic Display</h2>
              <div id="result">Loading...</div>
              
              <h2>Data Source Tests</h2>
              <div id="tests">
                  <div>
                      <h3>Fetching from ./revenue_data.json</h3>
                      <div id="test1">Testing...</div>
                  </div>
                  <div>
                      <h3>Fetching from /revenue_data.json</h3>
                      <div id="test2">Testing...</div>
                  </div>
                  <div>
                      <h3>Fetching from /1stop/dashboard/revenue_data.json</h3>
                      <div id="test3">Testing...</div>
                  </div>
                  <div>
                      <h3>Fetching from ./data/revenue_data.json</h3>
                      <div id="test4">Testing...</div>
                  </div>
              </div>
              
              <script>
                  // Function to fetch data
                  function fetchData(url, elementId) {
                      const timestamp = new Date().getTime();
                      fetch(url + '?t=' + timestamp)
                          .then(response => {
                              if (!response.ok) {
                                  throw new Error('Status ' + response.status);
                              }
                              return response.json();
                          })
                          .then(data => {
                              document.getElementById(elementId).innerHTML = 
                                  '<div class="success">Success! Total revenue: $' + data.total_revenue + '</div>' +
                                  '<pre>' + JSON.stringify(data, null, 2) + '</pre>';
                          })
                          .catch(error => {
                              document.getElementById(elementId).innerHTML = 
                                  '<div class="error">Error: ' + error.message + '</div>';
                          });
                  }
                  
                  // Test all paths
                  fetchData('./revenue_data.json', 'result');
                  fetchData('./revenue_data.json', 'test1');
                  fetchData('/revenue_data.json', 'test2');
                  fetchData('/1stop/dashboard/revenue_data.json', 'test3');
                  fetchData('./data/revenue_data.json', 'test4');
              </script>
          </body>
          </html>
          EOF
          
          # Verify the files
          echo "Created files:"
          ls -la 1stop/dashboard/
          echo "Data directory contents:"
          ls -la 1stop/dashboard/data/
          
          # Show file content
          echo "Content of revenue_data.json:"
          cat 1stop/dashboard/revenue_data.json
      
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add all files in the dashboard directory
          git add 1stop/dashboard/revenue_data.json
          git add 1stop/dashboard/data
          git add 1stop/dashboard/revenue-verify.html
          
          # Commit the changes
          git commit -m "Emergency fix: Update revenue data files with correct figures ($310,395.84)"
          
          # Push the changes
          git push origin gh-pages 